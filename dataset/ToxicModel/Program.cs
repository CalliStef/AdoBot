
// This file was auto-generated by ML.NET Model Builder. 

using System;

namespace ToxicModel.ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            ToxicModel.ModelInput sampleData = new ToxicModel.ModelInput()
            {
                Id = @"0000997932d777bf",
                Comment_text = @"Explanation
Why the edits made under my username Hardcore Metallica Fan were reverted? They weren't vandalisms, just closure on some GAs after I voted at New York Dolls FAC. And please don't remove the template from the talk page since I'm retired now.89.205.38.27",
                Severe_toxic = @"0",
                Obscene = @"0",
                Threat = @"0",
                Insult = @"0",
                Identity_hate = @"0",
            };

            Console.WriteLine("Using model to make single prediction -- Comparing actual Toxic with predicted Toxic from sample data...\n\n");


            Console.WriteLine($"Id: {@"0000997932d777bf"}");
            Console.WriteLine($"Comment_text: {@"Explanation
Why the edits made under my username Hardcore Metallica Fan were reverted ? They weren't vandalisms, just closure on some GAs after I voted at New York Dolls FAC. And please don't remove the template from the talk page since I'm retired now.89.205.38.27"}");

            Console.WriteLine($"Toxic: {@"0"}");
            Console.WriteLine($"Severe_toxic: {@"0"}");
            Console.WriteLine($"Obscene: {@"0"}");
            Console.WriteLine($"Threat: {@"0"}");
            Console.WriteLine($"Insult: {@"0"}");
            Console.WriteLine($"Identity_hate: {@"0"}");


            var sortedScoresWithLabel = ToxicModel.PredictAllLabels(sampleData);
            Console.WriteLine($"{"Class",-40}{"Score",-20}");
            Console.WriteLine($"{"-----",-40}{"-----",-20}");

            foreach (var score in sortedScoresWithLabel)
            {
                Console.WriteLine($"{score.Key,-40}{score.Value,-20}");
            }
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }
    }
}
